<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mall.user.dao.UserDAO">
	<!-- TEST -->
	<select id="selectUserListTEST" resultType="map">
		SELECT
			*
		FROM
			`user`
	</select>
	
	<!-- 아이디 존재 유무 -->
	<select id="existLoginId" parameterType="String" resultType="boolean">
		SELECT
			COUNT(*)
		FROM
			`user`
		WHERE
			`loginId` = #{loginId}
	</select>
	
	<!-- 유저 조회 (아이디, 비밀번호) -->
	<select id="selectUserByLoginIdOrPassword" parameterType="map" resultType="com.mall.user.model.User">
		SELECT
			`id`
			,`loginId`
			,`password`
			,`name`
			,`phoneNumber`
			,`email`
			,`postcode`
			,`address`
			,`detailAddress`
			,`type`
			,`createdAt`
			,`updatedAt`
		FROM
			`user`
		WHERE
			`loginId` = #{loginId}
			
			<if test="password != null">
			AND `password` = #{password}
			</if>
	</select>
	
	<!-- 유저 조회 (아이디, 이름, 휴대폰 번호) -->
	<select id="selectUserByNamePhoneNumberOrLoginId" parameterType="map" resultType="com.mall.user.model.User">
		SELECT
			`id`
			,`loginId`
			,`password`
			,`name`
			,`phoneNumber`
			,`email`
			,`postcode`
			,`address`
			,`detailAddress`
			,`type`
			,`createdAt`
			,`updatedAt`
		FROM
			`user`
		WHERE
			`name` = #{name}
			AND `phoneNumber` = #{phoneNumber}
			
			<if test="loginId != null">
			AND `loginId` = #{loginId}
			</if>
	</select>
	
	<!-- 유저 추가 -->
	<insert id="insertUser" parameterType="map">
		INSERT INTO `user`
		(
			`loginId`
			,`password`
			,`name`
			,`phoneNumber`
			,`email`
			,`postcode`
			,`address`
			,`detailAddress`
			,`type`
			,`createdAt`
			,`updatedAt`
		)
		VALUES
		(
			#{loginId}
			, #{password}
			, #{name}
			, #{phoneNumber}
			, #{email}
			, #{postcode}
			, #{address}
			, #{detailAddress}
			, 0
			, NOW()
			, NOW()
		)
	</insert>
	
	<!-- 비밀번호 수정 -->
	<update id="updateUserPasswordById" parameterType="map">
		UPDATE `user`
		SET
			`password` = #{password}
			,`updatedAt` = NOW()
		WHERE
			`id` = #{id}
	</update>
	
	<!-- 회원 정보 수정 -->
	<update id="updateUserInfoById" parameterType="map">
		UPDATE `user`
		SET
			`phoneNumber` = #{phoneNumber}
			,`email` = #{email}
			,`postcode` = #{postcode}
			,`address` = #{address}
			,`detailAddress` = #{detailAddress}
			,`updatedAt` = NOW()
		WHERE
			`id` = #{id}
	</update>
	
	<!-- 회원 탈퇴 -->
	<delete id="deleteUserByIdLoginIdPassword">
		DELETE
		FROM
			`user`
		WHERE
			`id` = #{id}
			AND `loginId` = #{loginId}
			AND `password` = #{password}
	</delete>
</mapper>