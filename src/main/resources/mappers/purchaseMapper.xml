<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mall.purchase.dao.PurchaseDAO">
	<!-- 구매 목록 전체 -->
	<select id="selectPurchaseListAll" resultType="com.mall.purchase.model.Purchase">
		SELECT
			`id`
			,`userId`
			,`totalPrice`
			,`name`
			,`phoneNumber`
			,`postcode`
			,`address`
			,`detailAddress`
			,`message`
			,`courier`
			,`trackingNumber`
			,`cancellation`
			,`createdAt`
			,`updatedAt`
		FROM
			`purchase`
		ORDER BY `id` DESC
	</select>
	
	<!-- 구매 목록 -->
	<select id="selectPurchaseList" parameterType="map" resultType="com.mall.purchase.model.Purchase">
		SELECT
			`id`
			,`userId`
			,`totalPrice`
			,`name`
			,`phoneNumber`
			,`postcode`
			,`address`
			,`detailAddress`
			,`message`
			,`courier`
			,`trackingNumber`
			,`cancellation`
			,`createdAt`
			,`updatedAt`
		FROM
			`purchase`
		WHERE
			`userId` = #{userId}
			
			<if test="startDate != null">
			<![CDATA[
			AND `createdAt` >= #{startDate}
			AND `createdAt` <= #{endDate}
			]]>
			</if>
			
		ORDER BY `id` DESC
	</select>
	
	<!-- 구매 조회 -->
	<select id="selectPurchaseById" parameterType="int" resultType="com.mall.purchase.model.Purchase">
		SELECT
			`id`
			,`userId`
			,`totalPrice`
			,`name`
			,`phoneNumber`
			,`postcode`
			,`address`
			,`detailAddress`
			,`message`
			,`courier`
			,`trackingNumber`
			,`cancellation`
			,`createdAt`
			,`updatedAt`
		FROM
			`purchase`
		WHERE
			`id` = #{id}
	</select>
	
	<!-- 구매 추가 -->
	<insert id="insertPurchase" parameterType="com.mall.purchase.model.Purchase" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO `purchase`
		(
			`userId`
			,`totalPrice`
			,`name`
			,`phoneNumber`
			,`postcode`
			,`address`
			,`detailAddress`
			,`message`
			,`cancellation`
			,`createdAt`
			,`updatedAt`
		)
		VALUES
		(
			#{userId}
			, #{totalPrice}
			, #{name}
			, #{phoneNumber}
			, #{postcode}
			, #{address}
			, #{detailAddress}
			, #{message}
			, 0
			, NOW()
			, NOW()
		)
	</insert>
	
	<!-- 구매 취소 -->
	<update id="updatePurchase" parameterType="int">
		UPDATE `purchase`
		SET
			`cancellation` = 1
			,`updatedAt` = NOW()
		WHERE
			`id` = #{id}
	</update>
	
	<!-- 구매 정보 수정 -->
	<update id="updatePurchaseById" parameterType="map">
		UPDATE `purchase`
		SET
			`courier` = #{courier}
			,`trackingNumber` = #{trackingNumber}
			,`cancellation` = #{cancellation}
			,`updatedAt` = NOW()
		WHERE
			`id` = #{id}
	</update>
	
	<!-- 구매 상품 목록 -->
	<select id="selectPurchaseProductList" parameterType="int" resultType="com.mall.purchase.model.PurchaseProduct">
		SELECT
			`id`
			,`userId`
			,`purchaseId`
			,`productId`
			,`productDetailId`
			,`amount`
			,`exchange`
			,`refund`
			,`completion`
			,`star`
			,`review`
			,`imagePath`
			,`createdAt`
			,`updatedAt`
		FROM
			`purchase_product`
		WHERE
			`purchaseId` = #{purchaseId}
	</select>
	
	<!-- 구매 상품 목록 (상품 id) -->
	<select id="selectPurchaseProductListByProductId" parameterType="int" resultType="com.mall.purchase.model.PurchaseProduct">
		SELECT
			`id`
			,`userId`
			,`purchaseId`
			,`productId`
			,`productDetailId`
			,`amount`
			,`exchange`
			,`refund`
			,`completion`
			,`star`
			,`review`
			,`imagePath`
			,`createdAt`
			,`updatedAt`
		FROM
			`purchase_product`
		WHERE
			`productId` = #{productId}
		ORDER BY `id` DESC
	</select>
	
	<!-- 구매 상품 조회 -->
	<select id="selectPurchaseProductById" parameterType="int" resultType="com.mall.purchase.model.PurchaseProduct">
		SELECT
			`id`
			,`userId`
			,`purchaseId`
			,`productId`
			,`productDetailId`
			,`amount`
			,`exchange`
			,`refund`
			,`completion`
			,`star`
			,`review`
			,`imagePath`
			,`createdAt`
			,`updatedAt`
		FROM
			`purchase_product`
		WHERE
			`id` = #{id}
	</select>
	
	<!-- 구매 상품 추가 -->
	<insert id="insertPurchaseProduct" parameterType="map">
		INSERT INTO `purchase_product`
		(
			`userId`
			,`purchaseId`
			,`productId`
			,`productDetailId`
			,`amount`
			,`exchange`
			,`refund`
			,`completion`
			,`createdAt`
			,`updatedAt`
		)
		VALUES
		(
			#{userId}
			, #{purchaseId}
			, #{productId}
			, #{productDetailId}
			, #{amount}
			, 0
			, 0
			, 0
			, NOW()
			, NOW()
		)
	</insert>
	
	<!-- 구매 상품 환불 -->
	<update id="updatePurchaseProductRefund" parameterType="int">
		UPDATE `purchase_product`
		SET
			`refund` = 1
			,`updatedAt` = NOW()
		WHERE
			`id` = #{id}
	</update>
	
	<!-- 구매 상품 교환 -->
	<update id="updatePurchaseProductExchange" parameterType="map">
		UPDATE `purchase_product`
		SET
			`productDetailId` = #{productDetailId}
			, `exchange` = 1
			,`updatedAt` = NOW()
		WHERE
			`id` = #{id}
	</update>
	
	<!-- 구매 상품 확정 -->
	<update id="updatePurchaseProductComplete" parameterType="int">
		UPDATE `purchase_product`
		SET
			`completion` = 1
			,`updatedAt` = NOW()
		WHERE
			`id` = #{id}
	</update>
	
	<!-- 구매 상품 후기 -->
	<update id="updatePurchaseProductReview" parameterType="map">
		UPDATE `purchase_product`
		SET
			`star` = #{star}
			,`review` = #{review}
			,`imagePath` = #{imagePath}
			,`updatedAt` = NOW()
		WHERE
			`id` = #{id}
	</update>
	
	<!-- 구매 상품 후기 삭제 -->
	<update id="updatePurchaseProductReviewNull" parameterType="int">
		UPDATE `purchase_product`
		SET
			`star` = NULL
			,`review` = NULL
			,`imagePath` = NULL
			,`updatedAt` = NOW()
		WHERE
			`id` = #{id}
	</update>
	
	<!-- 구매 상품 정보 수정 -->
	<update id="updatePurchaseProductById" parameterType="map">
		UPDATE `purchase_product`
		SET
			`refund` = #{refund}
			,`exchange` = #{exchange}
			,`completion` = #{completion}
			,`updatedAt` = NOW()
		WHERE
			`id` = #{id}
	</update>
</mapper>